{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","selectGood","good","setState","prevState","removeGood","filter","product","clearingSelectedGoodslist","makeSelectedGoodslist","length","join","className","this","map","classNames","activList","includes","key","indexOf","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqFaC,E,4MAjFbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,cAAeI,EAAUJ,cACtBM,QAAO,SAAAC,GAAO,OAAIA,IAAYL,U,EAIrCM,0BAA4B,WAC1B,EAAKL,UAAS,iBAAO,CACnBH,cAAe,Q,EAInBS,sBAAwB,WACtB,OAAQ,EAAKV,MAAMC,cAAcU,QAC/B,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAU,EAAKX,MAAMC,cAArB,gBACF,KAAK,EACH,MAAM,GAAN,OAAU,EAAKD,MAAMC,cAAcW,KAAK,SAAxC,iBACF,QACE,MAAM,GAAN,OAAU,EAAKZ,MAAMC,cAAcW,KAAK,MAAxC,mB,4CAKN,WAAU,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,6CAEG,IACAC,KAAKJ,yBAER,4BACGZ,EAAgBiB,KAAI,SAAAZ,GAAI,OACvB,wBACEU,UAAWG,IAAW,YACpB,CAAEC,UAAW,EAAKjB,MAAMC,cAAciB,SAASf,KACjDgB,IAAKrB,EAAgBsB,QAAQjB,IAE5BA,EACD,4BACEkB,KAAK,SACLC,QAAS,kBACP,EAAKtB,MAAMC,cAAciB,SAASf,GAC9B,EAAKG,WAAWH,GAChB,EAAKD,WAAWC,IAEtBU,UAAU,gBAET,EAAKb,MAAMC,cAAciB,SAASf,GAC/B,WACA,eAKZ,4BACEkB,KAAK,SACLR,UAAU,gBACVS,QAAS,kBAAM,EAAKb,8BAHtB,c,GAtEUc,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.39af49fe.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  selectGood = (good) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  }\n\n  removeGood = (good) => {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods\n        .filter(product => product !== good),\n    }));\n  }\n\n  clearingSelectedGoodslist = () => {\n    this.setState(() => ({\n      selectedGoods: [],\n    }));\n  }\n\n  makeSelectedGoodslist = () => {\n    switch (this.state.selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${this.state.selectedGoods} is selected`;\n      case 2:\n        return `${this.state.selectedGoods.join(' and ')} are selected`;\n      default: {\n        return `${this.state.selectedGoods.join(', ')} are selected`;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>\n          Selected good:\n          {' '}\n          {this.makeSelectedGoodslist()}\n        </h1>\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              className={classNames('app__list',\n                { activList: this.state.selectedGoods.includes(good) })}\n              key={goodsFromServer.indexOf(good)}\n            >\n              {good}\n              <button\n                type=\"button\"\n                onClick={() => (\n                  this.state.selectedGoods.includes(good)\n                    ? this.removeGood(good)\n                    : this.selectGood(good)\n                )}\n                className=\"list__button\"\n              >\n                {this.state.selectedGoods.includes(good)\n                  ? 'Unselect'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          className=\"clear--button\"\n          onClick={() => this.clearingSelectedGoodslist()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}